[gd_scene load_steps=48 format=3 uid="uid://pp07bp0arlak"]

[ext_resource type="Texture2D" uid="uid://px1m0orlsgdb" path="res://Characters/skeleton/Idle.png" id="1_ufaji"]
[ext_resource type="Texture2D" uid="uid://bl6rtikco8wu7" path="res://Characters/skeleton/Death.png" id="1_xposd"]
[ext_resource type="Texture2D" uid="uid://bneqarmw3xrhg" path="res://Characters/skeleton/Walk.png" id="2_cv4y5"]
[ext_resource type="Texture2D" uid="uid://blkd81u5cm2d1" path="res://Characters/skeleton/Attack.png" id="2_j0d0x"]
[ext_resource type="Texture2D" uid="uid://bucvfmi7bvqpa" path="res://Characters/skeleton/Take Hit.png" id="2_rksmt"]
[ext_resource type="PackedScene" uid="uid://c0oxfbixim7ic" path="res://Scenes/damage_box.tscn" id="7_3pfri"]

[sub_resource type="GDScript" id="GDScript_o3aiu"]
script/source = "extends CharacterBody2D


enum { 
	IDLE, 
	ATTACK, 
	CHASE, 
	DEATH, 
	DAMAGE, 
	RECOVER,
	MOVE
}

var state: int = 0:
	set(value):
		state = value
		match state:
			IDLE:
				idle_state()
			ATTACK:
				attack_state()
			CHASE:
				chase_state()
			DAMAGE:
				damage_state()
			DEATH:
				death_state()
			RECOVER:
				recover_state()
			MOVE:
				move_state()

@onready
var ray_cast = $RayCast2D
@onready
var animation = $AnimationPlayer
@onready
var sprite2d = $AnimatedSprite2D
@export
var fireball : PackedScene

var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")
var chase = false
var SPEED = 0
var player
var direction
var damage = 90
var HP = 10
var player_damage


func _ready():
	Signals.connect(\"player_position_update\", Callable(self, \"_on_player_position_update\"))
	Signals.connect(\"player_attack\", Callable(self, \"_on_damage_taking\"))


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y += gravity * delta
		
	var player = $\"../../Player/Player\"
	var direction = (player.position - self.position).normalized()
	
	move_and_slide()


func _on_player_position_update(player_pos):
	player = player_pos


func idle_state():
	animation.play(\"idle\")
	state = CHASE


func attack_state():
	animation.play(\"attack\")
	await animation.animation_finished
	state = RECOVER


func chase_state():
	direction = (player - self.position).normalized()
	if direction.x < 0:
		sprite2d.flip_h = true
		$AttackDIrection.rotation_degrees = 180
	else:
		sprite2d.flip_h = false
		$AttackDIrection.rotation_degrees = 0


func move_state():
	var player = $\"../../Player\"
	var direction = (player.position - self.position).normalized()
	if direction.x < 0:
		sprite2d.flip_h = true
		animation.play(\"walk\")
		velocity.x = SPEED * direction.x
	else:
		sprite2d.flip_h = false
		animation.play(\"walk\")
		velocity.x = SPEED * direction.x


# 2 метода для преследования
func _on_detector_body_entered(body, fireball):
	print(\"work\")
	state = MOVE
	var d = (player.position - self.position).normalized()
	velocity.x = d.x * SPEED


#func _on_detector_body_exited(body):
#	velocity.x = 0
#	state = IDLE


func recover_state():
	animation.play(\"recover\")
	await animation.animation_finished
	state = IDLE


func death_state():
	animation.play(\"death\")
	await animation.animation_finished
	queue_free()


# Коллизия атаки
func _on_attack_range_body_entered(body):
	state = ATTACK


# Для атаки персонажа
func _on_hit_box_area_entered(area):
	Signals.emit_signal(\"enemy_attack\", damage)


# При получении урона
func damage_state():
	animation.play(\"takingDamage\")
	await animation.animation_finished
	state = IDLE


func _on_damage_taking(plr_damage):
	player_damage = plr_damage


func _on_hurt_box_area_entered(area):
	await get_tree().create_timer(0.01).timeout
	HP -= player_damage
	if HP <= 0:
		state = DEATH
	else:
		state = IDLE
		state = DAMAGE
"

[sub_resource type="AtlasTexture" id="AtlasTexture_wf0xb"]
atlas = ExtResource("2_j0d0x")
region = Rect2(0, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_73isx"]
atlas = ExtResource("2_j0d0x")
region = Rect2(150, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_i8doc"]
atlas = ExtResource("2_j0d0x")
region = Rect2(300, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_18q4c"]
atlas = ExtResource("2_j0d0x")
region = Rect2(450, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_kule0"]
atlas = ExtResource("2_j0d0x")
region = Rect2(600, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_2068x"]
atlas = ExtResource("2_j0d0x")
region = Rect2(750, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_qobcf"]
atlas = ExtResource("2_j0d0x")
region = Rect2(900, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_6qqhj"]
atlas = ExtResource("2_j0d0x")
region = Rect2(1050, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_ecw5s"]
atlas = ExtResource("1_xposd")
region = Rect2(0, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_ha56u"]
atlas = ExtResource("2_rksmt")
region = Rect2(150, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_nsc5x"]
atlas = ExtResource("1_xposd")
region = Rect2(150, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_legk7"]
atlas = ExtResource("1_xposd")
region = Rect2(300, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_4vkqm"]
atlas = ExtResource("1_xposd")
region = Rect2(450, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_2eihg"]
atlas = ExtResource("1_ufaji")
region = Rect2(0, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_68hy0"]
atlas = ExtResource("1_ufaji")
region = Rect2(150, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_e41wc"]
atlas = ExtResource("1_ufaji")
region = Rect2(300, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_i8mn5"]
atlas = ExtResource("1_ufaji")
region = Rect2(450, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_e5blp"]
atlas = ExtResource("1_ufaji")
region = Rect2(0, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_d64xr"]
atlas = ExtResource("1_ufaji")
region = Rect2(150, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_dkovs"]
atlas = ExtResource("1_ufaji")
region = Rect2(300, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_ks7rc"]
atlas = ExtResource("2_rksmt")
region = Rect2(0, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_jd6sj"]
atlas = ExtResource("2_rksmt")
region = Rect2(150, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_w1cy7"]
atlas = ExtResource("2_rksmt")
region = Rect2(300, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_u5mmh"]
atlas = ExtResource("2_rksmt")
region = Rect2(450, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_e5voi"]
atlas = ExtResource("2_cv4y5")
region = Rect2(0, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_fj7ne"]
atlas = ExtResource("2_cv4y5")
region = Rect2(150, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_eq8er"]
atlas = ExtResource("2_cv4y5")
region = Rect2(300, 0, 150, 150)

[sub_resource type="AtlasTexture" id="AtlasTexture_3urkv"]
atlas = ExtResource("2_cv4y5")
region = Rect2(450, 0, 150, 150)

[sub_resource type="SpriteFrames" id="SpriteFrames_curtd"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_wf0xb")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_73isx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_i8doc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_18q4c")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kule0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2068x")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qobcf")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6qqhj")
}],
"loop": false,
"name": &"attack",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ecw5s")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ha56u")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_nsc5x")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_legk7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4vkqm")
}],
"loop": false,
"name": &"death",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_2eihg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_68hy0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_e41wc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_i8mn5")
}],
"loop": true,
"name": &"idle",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_e5blp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_d64xr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dkovs")
}],
"loop": false,
"name": &"recover",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ks7rc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_jd6sj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_w1cy7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_u5mmh")
}],
"loop": false,
"name": &"takingDamage",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_e5voi")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fj7ne")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_eq8er")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3urkv")
}],
"loop": true,
"name": &"walk",
"speed": 10.0
}]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_1cj83"]
radius = 8.0
height = 32.0

[sub_resource type="CircleShape2D" id="CircleShape2D_7ake2"]
radius = 200.0

[sub_resource type="Animation" id="Animation_2p15j"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AttackDIrection/DamageBox/HitBox/CollisionShape2D:disabled")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("AttackDIrection/AttackRange/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="Animation" id="Animation_3gfuq"]
length = 0.8
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4, 5, 6, 7]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("AnimatedSprite2D:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["attack"]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("AttackDIrection/DamageBox/HitBox/CollisionShape2D:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.6, 0.8),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [true, false, true]
}

[sub_resource type="Animation" id="Animation_edxt7"]
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("AnimatedSprite2D:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["death"]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("AttackDIrection/AttackRange/CollisionShape2D:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="Animation" id="Animation_7vdk5"]
length = 0.4
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("AnimatedSprite2D:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["idle"]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("AttackDIrection/AttackRange/CollisionShape2D:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="Animation" id="Animation_ekfel"]
length = 0.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [0, 1, 2]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("AnimatedSprite2D:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["recover"]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("AttackDIrection/AttackRange/CollisionShape2D:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="Animation" id="Animation_2jygt"]
length = 0.8
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("AnimatedSprite2D:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["takingDamage"]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("AttackDIrection/AttackRange/CollisionShape2D:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="Animation" id="Animation_cg7qr"]
length = 0.4
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("AnimatedSprite2D:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["walk"]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_qyt26"]
_data = {
"RESET": SubResource("Animation_2p15j"),
"attack": SubResource("Animation_3gfuq"),
"death": SubResource("Animation_edxt7"),
"idle": SubResource("Animation_7vdk5"),
"recover": SubResource("Animation_ekfel"),
"takingDamage": SubResource("Animation_2jygt"),
"walk": SubResource("Animation_cg7qr")
}

[sub_resource type="RectangleShape2D" id="RectangleShape2D_k3t55"]
size = Vector2(24, 21)

[node name="Skeleton" type="CharacterBody2D"]
collision_layer = 0
collision_mask = 3
script = SubResource("GDScript_o3aiu")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
scale = Vector2(0.746667, 0.746667)
sprite_frames = SubResource("SpriteFrames_curtd")
animation = &"attack"
autoplay = "idle"

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(2, 4)
shape = SubResource("CapsuleShape2D_1cj83")

[node name="Detector" type="Area2D" parent="."]
collision_layer = 0
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="Detector"]
shape = SubResource("CircleShape2D_7ake2")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_qyt26")
}

[node name="AttackDIrection" type="Node2D" parent="."]

[node name="AttackRange" type="Area2D" parent="AttackDIrection"]
collision_layer = 0
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="AttackDIrection/AttackRange"]
position = Vector2(32, 0.5)
shape = SubResource("RectangleShape2D_k3t55")

[node name="DamageBox" parent="AttackDIrection" instance=ExtResource("7_3pfri")]

[node name="HurtBox" parent="AttackDIrection/DamageBox" index="0"]
collision_layer = 32
collision_mask = 64

[node name="CollisionShape2D" parent="AttackDIrection/DamageBox/HurtBox" index="0"]
position = Vector2(4, -2)

[node name="HitBox" parent="AttackDIrection/DamageBox" index="1"]
position = Vector2(4, -1)
collision_layer = 0
collision_mask = 16

[node name="CollisionShape2D" parent="AttackDIrection/DamageBox/HitBox" index="0"]
position = Vector2(28, 1)

[connection signal="body_entered" from="Detector" to="." method="_on_detector_body_entered"]
[connection signal="body_entered" from="AttackDIrection/AttackRange" to="." method="_on_attack_range_body_entered"]
[connection signal="area_entered" from="AttackDIrection/DamageBox/HurtBox" to="." method="_on_hurt_box_area_entered"]
[connection signal="area_entered" from="AttackDIrection/DamageBox/HitBox" to="." method="_on_hit_box_area_entered"]

[editable path="AttackDIrection/DamageBox"]
